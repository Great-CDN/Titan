apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}-deployment
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0%
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "false"
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        configmap-hash: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.host }}{{ .Chart.Annotations.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
          livenessProbe:
              httpGet:
                path: {{ .Values.service.probeUri }}
                port: {{ .Values.service.internalPort }}
              initialDelaySeconds: 10
          readinessProbe:
              httpGet:
                path: {{ .Values.service.probeUri }}
                port: {{ .Values.service.internalPort }}
              initialDelaySeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}          
          volumeMounts:
            {{- range .Values.config }}
              - name: conf-volume
                mountPath: {{ $.Chart.Annotations.path }}/conf/{{ .file }}
                subPath: {{ .file }}
            {{- end }}
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: conf-volume
          configMap:
            name: {{ include "app.name" $ }}-configmap
            items:
              {{- range .Values.config }}
              - key: {{ .file }}
                path: {{ .file }}
              {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
